{"version":3,"sources":["components/pages/dialogs/dialogs-items/DialogsItem.js","components/pages/dialogs/dialogs-items/MessagesItem.js","components/pages/dialogs/dialogs-items/AddMessageForm.js","components/pages/dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/pages/dialogs/DialogsContainer.js"],"names":["DialogsItem","props","className","to","id","name","MessagesItem","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messageElements","messages","m","isAuth","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","Component","RedirectComponent","this","React"],"mappings":"iNAaeA,EATK,SAACC,GAEnB,OACE,qBAAKC,UAAU,cAAf,SACE,cAAC,IAAD,CAASC,GAAE,mBAAcF,EAAMG,IAA/B,SAAsCH,EAAMI,UCEnCC,EARM,SAACL,GACnB,OACC,qBAAKC,UAAU,sBAAf,SACGD,EAAMM,SADiCN,EAAMG,K,iCCC9CI,EAAcC,YAAiB,IAgBtBC,cAAU,CAAEC,KAAM,wBAAlBD,EAdQ,SAACT,GAEtB,OACI,uBAAMW,SAAUX,EAAMY,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUX,KAAK,iBAAiBY,SAAU,CAACC,IAAUV,GAAcW,YAAY,yBAEnG,8BACE,kD,OCkBKC,EA1BC,SAACnB,GAEf,IAAMoB,EAAQpB,EAAMqB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAatB,GAAIsB,EAAEtB,GAAeC,KAAMqB,EAAErB,MAAdqB,EAAEtB,OACvEuB,EAAkBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAczB,GAAIyB,EAAEzB,GAAeG,QAASsB,EAAEtB,SAAjBsB,EAAEzB,OAM/E,OAAIH,EAAM6B,OAGR,sBAAK5B,UAAU,iBAAf,UACE,qBAAKA,UAAU,eAAf,SACGqB,IAEH,sBAAKrB,UAAU,wBAAf,UACE,8BAAMyB,IACN,cAAC,EAAD,CAAgBf,SAbA,SAACmB,GACrB9B,EAAM+B,YAAYD,EAAOE,yBAGF,cAAC,IAAD,CAAU9B,GAAG,Y,wCCdlC+B,EAA6B,SAAAb,GAAK,MAAK,CAC3CS,OAAQT,EAAMc,KAAKL,S,QCQNM,sBAEbC,aAPsB,SAAChB,GAAD,MAAY,CAClCC,YAAY,eAAKD,EAAMC,gBAME,CAACU,mBDPI,SAACM,GAAe,IAEzCC,EAFwC,4JAG7C,WACC,OAAKC,KAAKvC,MAAM6B,OACT,cAACQ,EAAD,eAAeE,KAAKvC,QADI,cAAC,IAAD,CAAUE,GAAG,eAJA,GAEdsC,IAAMH,WAStC,OAFuCD,YAAQH,EAARG,CAAoCE,KCJ7DH,CAMbhB","file":"static/js/4.d5aed6eb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\"\r\nimport \"./../Dialogs.css\"\r\n\r\nconst DialogsItem = (props) => {\r\n\r\n  return (\r\n    <div className='dialogsItem'>\r\n      <NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogsItem","import React from \"react\";\r\n\r\nconst MessagesItem = (props) => {\r\n   return (\r\n    <div className='dialogsMessagesItem' key={props.id}>\r\n      {props.message}\r\n    </div>\r\n   )\r\n}\r\n\r\nexport default MessagesItem","import React from \"react\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { maxLengthCreator, required } from \"../../../../utils/validators/validators\"\r\nimport { Textarea } from \"../../../common/FormsControls/FormsControls\"\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n  return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field component={Textarea} name=\"newMessageBody\" validate={[required, maxLength50]} placeholder=\"Enter your message\" />\r\n        </div>\r\n        <div>\r\n          <button>Send</button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm)","import React from \"react\"\r\nimport \"./Dialogs.css\"\r\nimport DialogsItem from \"./dialogs-items/DialogsItem\"\r\nimport MessagesItem from \"./dialogs-items/MessagesItem\"\r\nimport AddMessageForm from \"./dialogs-items/AddMessageForm\"\r\nimport { Navigate } from \"react-router\"\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  const state = props.dialogsPage\r\n\r\n  const dialogsElements = state.dialogs.map(d => <DialogsItem id={d.id} key={d.id} name={d.name} />)\r\n  const messageElements = state.messages.map(m => <MessagesItem id={m.id} key={m.id} message={m.message} />)\r\n  \r\n  const addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody)\r\n  }\r\n\r\n  if(!props.isAuth) return <Navigate to=\"/login\" />\r\n\r\n  return (\r\n    <div className='dialogsWrapper'>\r\n      <div className='dialogsItems'>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className='dialogsMessagesWindow'>\r\n        <div>{messageElements}</div>\r\n        <AddMessageForm onSubmit={addNewMessage}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs","import React from \"react\"\r\nimport { Navigate } from \"react-router\"\r\nimport { connect } from \"react-redux\"\r\n\r\nconst mapStateToPropsForRedirect = state => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) return <Navigate to=\"/login\" />\r\n\t\t\treturn <Component {...this.props} />\r\n\t\t}\r\n\t}\r\n\r\n\tconst ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n\treturn ConnectedAuthRedirectComponent\r\n}","import \"./Dialogs.css\"\r\nimport { sendMessage } from \"../../../redux/dialogsReducer\"\r\nimport Dialogs from \"./Dialogs\"\r\nimport { connect } from \"react-redux\"\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\"\r\nimport { compose } from \"redux\"\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  dialogsPage: {...state.dialogsPage},\r\n})\r\n\r\n\r\nexport default compose(\r\n\r\n  connect(mapStateToProps, {sendMessage}),\r\n\r\n  withAuthRedirect,\r\n\r\n)(Dialogs)"],"sourceRoot":""}