{"version":3,"sources":["components/pages/profile/profile-items/Post.js","components/pages/profile/profile-items/MyPosts.js","components/pages/profile/profile-items/MyPostsContainer.js","components/pages/profile/profile-items/ProfileStatusFunc.js","components/pages/profile/profile-items/ProfileInfo.js","components/pages/profile/Profile.js","components/pages/profile/ProfileContainer.js"],"names":["Post","props","className","href","alt","text","src","likesCount","MyPosts","React","memo","postElements","posts","map","p","id","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusFunc","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onClick","ProfileInfo","profile","photos","large","Preloader","Profile","isAuth","to","compose","authorizedUserId","auth","userId","getUserProfile","getStatus","user_id","useParams","history","push","console","log"],"mappings":"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","file":"static/js/3.f40448b0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Post.css\"\r\n\r\nconst Post = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className='postCommon'>\r\n\t\t\t<div className='postHead'>\r\n\t\t\t\t<div  className='postHead'>\r\n\t\t\t\t\t<div className='miniAva'>\r\n\t\t\t\t\t\tmini-ava\r\n\t\t\t\t\t\t<img href=\"\" alt=\"\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<a className='postLink' href='http://localhost:3000/'>Profile Name</a>\r\n\t\t\t\t\t\t<p className='weakText'>post date</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tpost options\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='postMain'>\r\n\t\t\t\t<div>{props.text}</div>\r\n\t\t\t\t<div className='postImg'>\r\n\t\t\t\t\timage added to post\r\n\t\t\t\t\t<img src=\"\" alt=\"\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='postFoot'>\r\n\t\t\t\t<div className='postFootItem'>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tlike\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className='weakText'>\r\n\t\t\t\t\t\t{props.likesCount}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport \"./../Profile.css\"\r\nimport Post from \"./Post\"\r\nimport { reduxForm, Field} from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  const postElements = props.posts.map(p => <Post key={p.id} text={p.text} likesCount={p.likesCount} />)\r\n\r\n  const onAddPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='postsColumn'>\r\n      <div className='postCreating'>\r\n        <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      </div>\r\n      <div className='personalPosts'>\r\n        {postElements}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name=\"newPostText\" component={Textarea} placeholder=\"post message\" validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts","import { addPostActionCreator } from \"../../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\"\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {dispatch(addPostActionCreator(newPostText))},\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusFunc = (props) => {\r\n\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [status, setStatus] = useState(props.status)\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  return (\r\n    <div>\r\n      {!editMode ?\r\n        <div>\r\n          <span onClick={activateEditMode} >{props.status || \"empty status\"}</span>\r\n        </div>\r\n        :\r\n        <div>\r\n          <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n        </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileStatusFunc","import React from \"react\";\r\nimport Preloader from \"../../../common/Preloader\";\r\nimport \"../Profile.css\"\r\nimport ProfileStatusFunc from \"./ProfileStatusFunc\"\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div className='infoColumn'>\r\n      <div className='profilePhoto'>\r\n        <img src={profile.photos.large} alt=\"\" />\r\n      </div>\r\n      <div className='personalInfo'>\r\n        <ProfileStatusFunc status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo","import React from \"react\";\r\nimport { Navigate } from \"react-router\";\r\nimport MyPostsContainer from \"./profile-items/MyPostsContainer\";\r\nimport ProfileInfo from \"./profile-items/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n  if (!props.isAuth) return <Navigate to=\"/login\" />\r\n\r\n  return (\r\n    <div className='profile'>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {getUserProfile, getStatus, updateStatus} from \"../../../redux/profileReducer\";\r\nimport {useParams} from \"react-router\";\r\nimport {compose} from \"redux\"\r\n\r\nconst ProfileContainer = (props) => {\r\n\r\n  const {user_id} = useParams();\r\n\r\n  useEffect(() => {\r\n    let userId = user_id;\r\n    if (!userId) {\r\n      userId = props.authorizedUserId;\r\n      if (!userId) {\r\n        props.history.push(\"/login\")\r\n      }\r\n    }\r\n    if (!userId) return;\r\n    props.getUserProfile(userId);\r\n    props.getStatus(userId);\r\n    console.log(\"======> request\")\r\n  }, [user_id]);\r\n\r\n  return (\r\n      <Profile {...props} profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus})\r\n)(ProfileContainer)"],"sourceRoot":""}